<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="indi.dwq.orderingSys.data.dao.OrderMapper">
    <resultMap id="BaseResultMap" type="indi.dwq.orderingSys.data.pojo.Order">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="to_time"  property="time"/>
        <result column="ps" jdbcType="VARCHAR" property="ps"/>
        <result column="price" jdbcType="DOUBLE" property="price"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
        <collection property="foods" column="id"  ofType="list"
                     select="indi.dwq.orderingSys.data.dao.FoodMapper.selectFoodSalesByOrderID" />

    </resultMap>



    <sql id="Base_Column_List">
    id, user_id, to_time, ps, price,state
  </sql>
    <select id="selectByEateryId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT * FROM food_order
        WHERE id IN (SELECT order_id id FROM food_sales
               WHERE food_id IN (SELECT id FROM food WHERE eatery_id=#{eateryId})  )
         ORDER BY state
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from food_order
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from food_order
        where user_id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectByUserIdAndOnWay" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from food_order
        where user_id = #{id,jdbcType=INTEGER} and state = #{state}
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from food_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="indi.dwq.orderingSys.data.pojo.Order">
    insert into food_order (id, user_id, to_time,
      ps, price,state)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{time},
      #{ps,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE},1)
  </insert>
    <insert id="insertOrderFood" parameterType="java.util.Map" >
        insert into food_sales(food_id,count,price,order_id) VALUES
        (#{orderFood.foodid},#{orderFood.count},#{price},#{orderId})
    </insert>
    <insert id="insertOrder" keyProperty="id" useGeneratedKeys="true"  parameterType="indi.dwq.orderingSys.data.pojo.Order">
        insert into food_order (user_id,to_time,
        <trim ><if test="ps != null"> ps,</if></trim>
        price) values (#{userId,jdbcType=INTEGER},
        #{time},
        <trim ><if test="ps != null">#{ps,jdbcType=VARCHAR},</if></trim>
        #{price,jdbcType=DOUBLE})
    </insert>
    <update id="setOrderPrice" >
        update food_order  set price = #{price}  where id = #{id}
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="indi.dwq.orderingSys.data.pojo.Order">
        update food_order
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="time != null">
                to_time = #{time,jdbcType=DATE},
            </if>
            <if test="ps != null">
                ps = #{ps,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DOUBLE},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=DOUBLE},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="indi.dwq.orderingSys.data.pojo.Order">
    update food_order
    set user_id = #{userId,jdbcType=INTEGER},
      to_time = #{time,jdbcType=DATE},
      ps = #{ps,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>